stages:
  - build
  - test
  - deploy

# Build Stage: Spring Boot 애플리케이션 빌드
build:
  stage: build
  image: gradle:7.5.1-jdk17
  script:
    - gradle clean build -x test
  artifacts:
    paths:
      - build/libs/*.jar
  only:
    - review

# Test Stage: 테스트 실행
test:
  stage: test
  image: gradle:7.5.1-jdk17
  script:
    - gradle test -Dspring.profiles.active=test
  only:
    - review

# Deploy Stage: Docker로 애플리케이션 배포
deploy:
  stage: deploy
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
      command: [ "--tls=false" ]
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    # SSH 키 Setup
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $GCP_VM_IP >> ~/.ssh/known_hosts
  script:
    - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USER" --password-stdin
    - docker build -t $DOCKER_USER/mosoo_spring:latest .
    - docker push $DOCKER_USER/mosoo_spring:latest
    # .env 파일 생성
    - echo "DOCKER_USER=$DOCKER_USER" > .env

    - echo "AWS_S3_AK=$AWS_S3_AK" >> .env
    - echo "AWS_S3_SK=$AWS_S3_SK" >> .env
    - echo "DB_URL=$DB_URL" >> .env
    - echo "DB_USERNAME=$DB_USERNAME" >> .env
    - echo "DB_PASSWORD=$DB_PASSWORD" >> .env
    - echo "DEPLOY_FRONT_URL=$DEPLOY_FRONT_URL" >> .env
    - echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
    - echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
    - echo "impKey=$impKey" >> .env
    - echo "impSecret=$impSecret" >> .env
    - echo "DOMAIN_URL=$DOMAIN_URL" >> .env
    # GCP VM에 전송 및 SSH 접속 후 Docker-compose
    - scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa .env $GCP_USER@$GCP_VM_IP:/path/to/your/project/spring/
    - scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa docker-compose.yml $GCP_USER@$GCP_VM_IP:/path/to/your/project/spring/
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $GCP_USER@$GCP_VM_IP "
      cd /path/to/your/project/spring/ &&
      docker pull $DOCKER_USER/mosoo_spring:latest &&
      docker-compose down || echo 'Containers were not running or failed to stop.' &&
      docker image prune -f
      "
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $GCP_USER@$GCP_VM_IP "
      cd /path/to/your/project/spring/ &&
      docker-compose up -d
      "
  only:
    - review
